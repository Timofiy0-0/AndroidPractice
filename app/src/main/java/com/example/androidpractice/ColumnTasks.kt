package com.example.androidpractice

import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.Icon
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp

//–∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–¥–æ.
// –Ω–∞–¥–æ –æ—Ç–∫—Ä—ã—Ç—å —Ç—É—Ç –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –≤–∫–ª–∞–¥–∫—É –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞

//NO CHATGPT

//16.03.2025 - –¢–∏–º–∞, —Ç—ã - –º–æ–ª–æ–¥–µ—Ü—å!!! üéâüéâüéâ

@Composable
fun Task1() {
    // ‚úÖ –°–¥–µ–ª–∞–π 3 —Ç–µ–∫—Å—Ç–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑.
    Column {
        Text("bombaleyla")
        Text("bombaleyla")
        Text("bombaleyla")
    }
}

@Composable
fun Task2() {
    // ‚úÖ –°–¥–µ–ª–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É, —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞
    Column(
        Modifier
            .fillMaxSize(), Arrangement.Center, Alignment.CenterHorizontally
    ) {
        Icon(
            painter = painterResource(R.drawable.ic_launcher_foreground),
            contentDescription = "androed",
            modifier = Modifier
                .size(50.dp)
        )
        Button(
            onClick = {},
            modifier = Modifier
                .width(150.dp)
                .height(60.dp)
        ) {
            Text(text = "hello")
        }
        Text(text = "qwerty")
    }
}

@Composable
fun Task3() {
    // ‚úÖ –°–¥–µ–ª–∞–π –ö–æ–ª—É–º–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—â–µ –æ–¥–∏–Ω –∫–æ–ª—É–º–Ω –∫–æ—Ç–æ—Ä—ã–π 80—Ö80, –∫—Ä–∞—Å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–ø—Ä–∞–≤–∞ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞
    Column(Modifier.fillMaxSize(), Arrangement.Center, Alignment.End) {
        Column(
            Modifier
                .size(80.dp)
                .background(Color.Red),
        )
        {

        }
    }
}

@Composable
fun Task4() {
    // ‚úÖ –°–¥–µ–ª–∞–π —ç–∫—Ä–∞–Ω –≤ –∫–æ—Ç–æ—Ä–æ–º 3 –∫–æ–ª—É–º–Ω–∞ —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑. –≤—Å–µ –æ–Ω–∏ –∑–∞–Ω–∏–º–∞—é—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É. –ü–µ—Ä–≤—ã–π –ø–æ –≤—ã—Å–æ—Ç–µ 50–¥–ø. –≤—Ç–æ—Ä–æ–π 100–¥–ø. –∞ —Ç—Ä–µ—Ç–∏–π –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ. –ø—É—Å—Ç—å –æ–Ω–∏ –±—É–¥—É—Ç 3—Ö —Ü–≤–µ—Ç–æ–≤ –∫–∞–∫ –ø–µ–ª—å–º–µ–Ω–∏ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ª–µ–ø–∏–ª–∏))
    Column {
    Column(
        Modifier
            .fillMaxWidth()
            .height(50.dp)
            .background(Color.Cyan)
    ) { }
    Column(
        Modifier
            .fillMaxWidth()
            .height(100.dp)
            .background(Color.Magenta)
    ) { }
    Column(
        Modifier
            .fillMaxSize()
            .background(Color.Yellow) //TODO –æ—Ä–∞–Ω–∂–µ–≤—ã–π –µ—Å—Ç—å –≤ Task6
    ) { }
    }
}

@Composable
fun Task5() {
    // ‚úÖ –í—ã—Ä–æ–≤–Ω—è–π 2 –∫–Ω–æ–ø–∫–∏ –≤–Ω—É—Ç—Ä–∏ Column –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞.
    Column(
        Modifier
            .fillMaxSize(), Arrangement.Center, Alignment.CenterHorizontally
    ) {
        Button(
            onClick = {},
            modifier = Modifier
                .width(150.dp)
                .height(75.dp)
        ) {
            Text(text = "–∫—á–∞—É")
        }
        Spacer(Modifier.size(16.dp)) //—ç—Ç–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã, —á—Ç–æ–± –∫–Ω–æ–ø–∫–∏ –Ω–µ –±—ã–ª–∏ –ø—Ä–∏–ª–µ–ø–ª–µ–Ω–Ω—ã–µ –¥—Ä—É–≥ –∫–æ –¥—Ä—É–≥—É)
        Button(
            onClick = {},
            modifier = Modifier
                .width(150.dp)
                .height(75.dp)
        ) {
            Text(text = "–º—è—É")
        }
    }
}

@Composable
fun Task6() {
    // TODO: –°–¥–µ–ª–∞–π –ö–æ–ª—É–º–Ω –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω, —É –Ω–µ–≥–æ –æ—Ç—Å—Ç—É–ø—ã —Å–æ –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω 16.–¥–ø –∏ –æ–Ω –æ—Ä–∞–Ω–∂–µ–≤—ã–π
    // TODO: –∞ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ 3 –∫–æ–ª—É–º–Ω–∞ –±–µ–ª—ã—Ö, –∑–∞–Ω–∏–º–∞—é—â–∏—Ö –≤—Å—ë –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É –∏ —É –Ω–∏—Ö —Ç–æ–∂–µ –ø—ç–¥–¥–∏–Ω–≥ 16.–¥–ø

    // TODO: –≤–æ—Ç —Ç–µ–±–µ –æ—Ä–∞–Ω–∂–µ–≤—ã–π - Color(0xFFFF8000)
    // TODO: —Ç—É—Ç –Ω–µ —Ç–∞–∫, –∏–º –Ω–µ –Ω–∞–¥–æ –∑–∞–¥–∞–≤–∞—Ç—å size, –∏–º –≤—Å–µ–º –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π weight –∏ fillMaxWidth

    Column(
        Modifier
            .fillMaxSize()
            .padding(16.dp)
            .background(Color.Yellow)
    ) {
        Column(
            Modifier
                .size(200.dp)
                .padding(16.dp)
                .background(Color.White)
        ) { }
        Column(
            Modifier
                .size(200.dp)
                .padding(16.dp)
                .background(Color.White)
        ) { }
        Column(
            Modifier
                .size(200.dp)
                .padding(16.dp)
                .background(Color.White)
        ) { }
        //—Å–æ–º–Ω–∏–≤–∞—é—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏
    }
}

@Composable
fun Task7() {
    // ‚úÖ –°–¥–µ–ª–∞–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ö–æ–ª—É–º–Ω –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω. –∞ –≤ –Ω–µ–º –∫–æ–ª—É–º–Ω 50—Ö50 –¥–ø. –î–æ–±–∞–≤—å –¥–æ—á–µ—Ä–Ω–µ–º—É Column —Ä–∞–º–∫—É —Ç–æ–ª—â–∏–Ω–æ–π 2dp —á–µ—Ä–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞.
    Column(
        Modifier
            .fillMaxSize()
            .background(Color.Cyan)
            .padding(16.dp)
    ) {
        Column(
            Modifier
                .size(50.dp)
                .background(Color.White)
                .border(2.dp, Color.Black)
        ) { }
    }
}

@Composable
fun Task8() {
    // ‚úÖ –°–¥–µ–ª–∞–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π Column. –í –Ω–µ–º 3 Column, –∑–∞–Ω–∏–º–∞—é—â–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ 16.dp –∏ —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ —Ñ–æ–Ω–∞.
    // ‚úÖ –£ –∫–∞–∂–¥–æ–≥–æ Column –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤. –í–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ Column —Ä–∞–∑–º–µ—Å—Ç–∏ 3 —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ –Ω–∏–±—É–¥—å –ø—Ä–æ –ª—é–±–∏–º—É—é –µ–¥—É.
    // ‚úÖ –í –ø–µ—Ä–≤–æ–º Column –∏—Å–ø–æ–ª—å–∑—É–π Arrangement.Top, –≤–æ –≤—Ç–æ—Ä–æ–º - Arrangement.Center, –≤ —Ç—Ä–µ—Ç—å–µ–º - Arrangement.SpaceBetween.
    Column {
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Green)
                .weight(1f)
                .padding(16.dp),
            Arrangement.Top
        ) {
            Text("–±—É—Ä–≥–µ—Ä")
            Text("–∏–º–±–∞")
            Text("–æ—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–π, —Å–æ—á–Ω–µ–Ω—å–∫–∏–π, —Å –∫—É—Ä–æ—á–∫–æ–π")
        }
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Yellow)
                .weight(1f)
                .padding(16.dp),
            Arrangement.Center
        ) {
            Text("–∫—É—Ä–æ—á–∫–∞")
            Text("—Å –∫–æ—Ä–æ—á–∫–æ–π")
            Text("c—É–ø–µ—Ä –≤–∫—É—Å–Ω–∞—è, —Å–æ—á–Ω–∞—è, –º–æ—â–Ω–∞—è")
        }
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Cyan)
                .weight(1f)
                .padding(16.dp),
            Arrangement.SpaceBetween
        ) {
            Text("—Å—É—à–∏")
            Text("—Ñ–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è")
            Text("—Å —Å–æ–µ–≤—ã–º —Å–æ—É—Å–æ–º, —Å –≤–∞—Å–∞–±–∏, —Å—É–ø–µ—Ä –≤–∫—É—Å–Ω—ã–µ")
        }
    }
}

@Composable
fun Task9() {
    // ‚úÖ –°–¥–µ–ª–∞–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π Column. –í –Ω–µ–º 3 Column, –∑–∞–Ω–∏–º–∞—é—â–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ 16.dp –∏ —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ —Ñ–æ–Ω–∞.
    // ‚úÖ –£ –∫–∞–∂–¥–æ–≥–æ Column –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤. –í–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ Column —Ä–∞–∑–º–µ—Å—Ç–∏ 3 —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ –Ω–∏–±—É–¥—å –ø—Ä–æ –º—É–∑—ã–∫—É.
    // ‚úÖ –í –ø–µ—Ä–≤–æ–º Column –∏—Å–ø–æ–ª—å–∑—É–π Alignment.Start, –≤–æ –≤—Ç–æ—Ä–æ–º - Alignment.CenterHorizontally, –≤ —Ç—Ä–µ—Ç—å–µ–º - Alignment.End.
    Column {
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Yellow)
                .weight(1f)
                .padding(16.dp),
            horizontalAlignment = Alignment.Start
        ) {
            Text("–ú–æ–π –∏—Å–∫—É–ø–∏—Ç–µ–ª—å –º–æ–π –¥—Ä—É–≥ –Ω–µ–±–µ—Å–Ω—ã–π")
            Text("–º–µ–Ω—è –Ω–∞ –Ω–µ–±–æ –æ–Ω –ø–æ—Å–∞–¥–∏–ª")
            Text("—Ç—É—Ç—É—Ç—É—Ç–∏—Ç—É—Ç–∏—Ç—É")
        }
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.LightGray)
                .weight(1f)
                .padding(16.dp),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text("–ó–µ–º–ª—è –ø—Ä–æ–π–¥–µ—Ç –∏ –≤—Å–µ –¥–µ–ª–∞")
            Text("—Å–≥–æ—Ä—è—Ç")
            Text("—Ç—É—Ç–∏—Ç—É—Ç–∏—Ç—É—Ç–∏")
        }
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Magenta)
                .weight(1f)
                .padding(16.dp),
            horizontalAlignment = Alignment.End
        ) {
            Text("–ë–æ–≥ –ø—Ä–µ–∂–¥–µ –º–∏—Ä–∞ –Ω–∞—Å —É–∑–Ω–∞–ª")
            Text("–Ω–∞–º –æ–ø—Ä–∞–≤–¥–∞–Ω—å–µ –¥–∞—Ä–æ–º –¥–∞–ª")
            Text("—Ç—É—Ü–∏—Ç–∞—Ü–∏—Ç—É—Ü—Ç—É—Ü—Ç—É—Ü")
        }
    }
}

@Composable
fun Task10() {
    // ‚úÖ –°–¥–µ–ª–∞–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π Column. –í –Ω–µ–º 3 Column, –∑–∞–Ω–∏–º–∞—é—â–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ 16.dp –∏ —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ —Ñ–æ–Ω–∞.
    // ‚úÖ –£ –∫–∞–∂–¥–æ–≥–æ Column –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤. –í–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ Column —Ä–∞–∑–º–µ—Å—Ç–∏ 3 —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ –Ω–∏–±—É–¥—å –ø—Ä–æ –Ω–∞—É–∫–∏)).
    // ‚úÖ –í –ø–µ—Ä–≤–æ–º Column –∏—Å–ø–æ–ª—å–∑—É–π Arrangement.Top –∏ Alignment.Start, –≤–æ –≤—Ç–æ—Ä–æ–º - Arrangement.Center –∏ Alignment.CenterHorizontally, –≤ —Ç—Ä–µ—Ç—å–µ–º - Arrangement.SpaceBetween –∏ Alignment.End.
    Column {
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Green)
                .weight(1f)
                .padding(16.dp),
            Arrangement.Top,
            horizontalAlignment = Alignment.Start
        ) {
            Text("–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
            Text("–∫–∞–ø–µ—Ü")
            Text("—Ç–µ–æ—Ä–µ–º–∞ –≤–∏–µ—Ç–∞, –¥—Ä–æ–±–∏ –∏ —Ç.–¥.")
        }
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Yellow)
                .weight(1f)
                .padding(16.dp),
            Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text("—Ö–∏–º–∏—è")
            Text("—É–∂–∞—Å")
            Text("H‚ÇÇO - –í–æ–¥–∞")
        }
        Column(
            Modifier
                .fillMaxWidth()
                .padding(16.dp)
                .clip(RoundedCornerShape(16.dp))
                .background(Color.Cyan)
                .weight(1f)
                .padding(16.dp),
            Arrangement.SpaceBetween,
            horizontalAlignment = Alignment.End
        ) {
            Text("—Ñ–∏–∑–∏–∫–∞")
            Text("–µ–º–∞–µ")
            Text("E = mc¬≤")
        }
    }
}

@Composable
fun Task11() {
    // ‚úÖ –°–æ–∑–¥–∞–π Column, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –º–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –±—ã–ª–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞.
    // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π Modifier.verticalScroll() –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏.
    Column(
        Modifier
            .width(400.dp)
            .fillMaxHeight()
            .background(Color.Magenta)
            .padding(20.dp)
            .verticalScroll(rememberScrollState())
    ) {
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
        Column(
            Modifier
                .size(60.dp)
                .background(Color.Blue)
        ) { }
        Spacer(Modifier.height(20.dp))
    }
}

@Composable
fun Task12() {
    // ‚úÖ –°–æ–∑–¥–∞–π LazyColumn.
    // ‚úÖ –í –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤—å item { Text("–ù–∞—á–∞–ª–æ") }.
    // ‚úÖ –ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —á–µ—Ä–µ–∑ items().
    // ‚úÖ –í –∫–æ–Ω—Ü–µ —Å–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤—å item { Text("–ö–æ–Ω–µ—Ü") }.
    LazyColumn(Modifier.fillMaxSize()) {
        item { Text("–ù–∞—á–∞–ª–æ") }
        items(7) {
            Spacer(Modifier.height(20.dp))
            Column(
                Modifier
                    .size(60.dp)
                    .background(Color.Blue)
            ) { }
            Spacer(Modifier.height(20.dp))
        }
        item { Text("–ö–æ–Ω–µ—Ü") }
    }
}

@Composable
fun Task13() {
    // ‚úÖ –°–æ–∑–¥–∞–π Column, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç 3 –±–ª–æ–∫–∞:
    // ‚úÖ - –ü–µ—Ä–≤—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç 20% –≤—ã—Å–æ—Ç—ã.
    // ‚úÖ - –í—Ç–æ—Ä–æ–π –∑–∞–Ω–∏–º–∞–µ—Ç 30% –≤—ã—Å–æ—Ç—ã.
    // ‚úÖ - –¢—Ä–µ—Ç–∏–π –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Å—Ç–∞–≤—à–∏–µ—Å—è 50%.
    // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π weight() –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.
    Column(Modifier.fillMaxSize()) {
        Column(
            Modifier
                .fillMaxWidth()
                .weight(2f)
                .background(Color.Blue)
        ) { }
        Column(
            Modifier
                .fillMaxWidth()
                .weight(3f)
                .background(Color.Green)
        ) { }
        Column(
            Modifier
                .fillMaxWidth()
                .weight(5f)
                .background(Color.Magenta)
        ) { }
    }
}

@Preview(showBackground = true)
@Composable
fun PreviewColumnTasks() {
    //—Å—é–¥–∞ –ø–∏—à–µ—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Å–µ–π—á–∞—Å –¥–µ–ª–∞–µ—Ç–µ, —á—Ç–æ–± —Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å
    Task13()
}

/**
 * –°–ø—Ä–∞–≤–∫–∞ –ø–æ Column –∏ Modifier:
 * - Column —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑.
 *
 * - Arrangement —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ Column:
 *   - Arrangement.Top ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∂–∞—Ç—ã –∫ –≤–µ—Ä—Ö—É.
 *   - Arrangement.Center ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ —Ü–µ–Ω—Ç—Ä—É.
 *   - Arrangement.End ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∂–∞—Ç—ã –∫ –∫–æ–Ω—Ü—É.
 *   - Arrangement.SpaceBetween ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ.
 *   - Arrangement.SpaceAround ‚Äî —Å–≤–æ–±–æ–¥–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤–æ–∫—Ä—É–≥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
 *   - Arrangement.SpaceEvenly ‚Äî —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.
 *
 *   —É –ö–æ–ª—É–º–Ω–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ verticalArrangement - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
 *
 * - Alignment —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ Column –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏:
 *   - Alignment.Start ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã –≤—ã—Ä–æ–≤–Ω–µ–Ω—ã –≤–ª–µ–≤–æ.
 *   - Alignment.CenterHorizontally ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã –≤—ã—Ä–æ–≤–Ω–µ–Ω—ã –ø–æ —Ü–µ–Ω—Ç—Ä—É.
 *   - Alignment.End ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã –≤—ã—Ä–æ–≤–Ω–µ–Ω—ã –≤–ø—Ä–∞–≤–æ.
 *
 *   —É –ö–æ–ª—É–º–Ω–∞ —Ç–æ–ª—å–∫–æ horizontalAlignment - –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
 *
 * - –ú–æ–∂–Ω–æ –≤–∫–ª–∞–¥—ã–≤–∞—Ç—å –æ–¥–∏–Ω Column –≤ –¥—Ä—É–≥–æ–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Modifier.weight() –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏.
 *
 * - Modifier.padding() –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –æ—Ç—Å—Ç—É–ø—ã. –æ–¥–Ω–æ —á–∏—Å–ª–æ - –æ—Ç—Å—Ç—É–ø—ã —Å 4—Ö —Å—Ç–æ—Ä–æ–Ω. 2 –∑–Ω–∞—á–µ–Ω–∏—è = –ø–µ—Ä–≤–æ–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏, –≤—Ç–æ—Ä–æ–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏, 4 –∑–Ω–∞—á–µ–Ω–∏—è - –≤—Å–µ 4 —Å—Ç–æ—Ä–æ–Ω—ã
 * - Modifier.background() –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ–æ–Ω –¥–ª—è Column.
 * - Modifier.border() –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü—ã –≤–æ–∫—Ä—É–≥ Column.
 * - Modifier.height() –∑–∞–¥–∞—ë—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É Column.
 * - Modifier.width() –∑–∞–¥–∞—ë—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É Column.
 * - Modifier.size() –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —à–∏—Ä–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É Column. –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ - —à–∏—Ä–∏–Ω–∞ –∏ –≤—ã—Å–æ—Ç–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ - –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π. –µ—Å–ª–∏ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ —à–∏—Ä–∏–Ω–∞ –∏ –≤—ã—Å–æ—Ç–∞ —Ä–∞–∑–Ω—ã–µ.
 * - Modifier.fillMaxHeight() - –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å—é –≤–æ–∑–º–æ–∂–Ω—É—é –≤—ã—Å–æ—Ç—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 * - Modifier.fillMaxWidth() - –∑–∞–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—É—é —à–∏—Ä–∏–Ω—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 * - Modifier.fillMaxSize() - –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é —à–∏—Ä–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 * - Modifier.clip() - –æ–±—Ä–µ–∑–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä Modifier.clip(RoundedCornerShape(12.dp))
 */